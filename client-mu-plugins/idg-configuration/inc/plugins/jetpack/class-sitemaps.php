<?php
/**
 * File for managing sitemaps generated by Jetpack
 *
 * @package idg-configuration
 */

namespace IDG\Configuration\Plugins\Jetpack;

/**
 * Class for managing sitemaps generated by Jetpack
 */
class Sitemaps {
	/**
	 * Constructor.
	 */
	public function __construct() {
		add_filter( 'jetpack_sitemap_news_sitemap_post_types', [ $this, 'news_sitemap_post_types' ], 10, 1 );
		add_filter( 'jetpack_sitemap_url', [ $this, 'sitemap_item' ], 10, 2 );
		add_filter( 'jetpack_sitemap_skip_post', [ $this, 'post_skip_item' ], 10, 2 );
		add_filter( 'jetpack_sitemap_news_skip_post', [ $this, 'news_skip_item' ], 10, 2 );
		add_filter( 'jetpack_sitemap_image_skip_post', [ $this, 'image_skip_item' ], 10, 2 );
		add_filter( 'jetpack_sitemap_video_skip_post', [ $this, 'video_skip_item' ], 10, 2 );
	}

	/**
	 * Get page canonical URL, fallback to permalink.
	 *
	 * @param int $post_id post ID.
	 * @return string
	 */
	public function get_canonical_url( $post_id ) : string {
		$url = get_the_permalink( $post_id );

		if ( ! is_single( $post_id ) && ! is_page( $post_id ) ) {
			return $url;
		}

		$multititle = json_decode( get_post_meta( $post_id, 'multi_title', true ), true );

		if (
			isset( $multititle['titles']['seo'] )
			&& isset( $multititle['titles']['seo']['additional']['seo_canonical_url'] )
		) {
			$url = $multititle['titles']['seo']['additional']['seo_canonical_url'];
		}

		return $url;
	}

	/**
	 * Returns post types that should appear in the news sitemap.
	 *
	 * @param array $post_types default array of post types included in news sitemap.
	 * @return array
	 */
	public function news_sitemap_post_types( array $post_types ) : array {
		$post_types = [ 'post' ];

		return $post_types;
	}

	/**
	 * Returns sitemap item.
	 *
	 * @param array $item_array Associative array representing sitemap URL element.
	 * @param int   $post_id ID of the post being processed.
	 * @return array
	 */
	public function sitemap_item( array $item_array, int $post_id ) : array {
		$item_array['url']['loc'] = $this->get_canonical_url( $post_id );

		return $item_array;
	}

	/**
	 * Returns whether or not the current item should be included in the posts/pages sitemap.
	 *
	 * @param boolean  $skip Current boolean. False by default, so no post is skipped.
	 * @param \WP_Post $post Current post object.
	 * @return bool
	 */
	public function post_skip_item( bool $skip, $post ) {
		if ( $post ) {
			$post_type = get_post_type( $post->ID );
			if ( $post_type && $post_type === 'page' ) {
				$template_slug = get_page_template_slug( $post->ID );
			}

			// If for whatever reason we fail to get the slug just retrun $skip.
			if ( ! $template_slug ) {
				return $skip;
			}

			// If the template slug contains our custom google search template slug return true.

			if ( \strpos( $template_slug, 'google-search.php' ) !== false ) {
				return true;
			}
		}

		return $skip;
	}

	/**
	 * Returns whether or not the current item should be included in the news sitemap.
	 *
	 * @param boolean  $skip Current boolean. False by default, so no post is skipped.
	 * @param \WP_Post $post Current post object.
	 * @return bool
	 */
	public function news_skip_item( bool $skip, $post ) {
		// If sponsored set skip to true, as they should not appear in news sitemap.
		if ( idg_base_theme_get_sponsorship( $post->ID ) ) {
			$skip = true;
		}

		return $skip;
	}

	/**
	 * Skip image items so that the sitemap is empty.
	 *
	 * If in the future images need to be indexed we will need to take into account migrated images.
	 *
	 * @return bool
	 */
	public function image_skip_item() : bool {
		return true;
	}

	/**
	 * Skip video items so that the sitemap is empty.
	 *
	 * If in the future videos need to be indexed we will need to take into account migrated videos/JW Player videos.
	 *
	 * @return bool
	 */
	public function video_skip_item() : bool {
		return true;
	}
}
