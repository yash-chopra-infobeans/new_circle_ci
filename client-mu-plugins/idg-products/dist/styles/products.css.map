{"version":3,"sources":["webpack:///components/Placeholder.scss","webpack:///_settings.scss","webpack:///components/Modal.scss","webpack:///../../../../node_modules/sass-mq/_mq.scss","webpack:///components/Thumbnail.scss","webpack:///components/Table.scss","webpack:///components/Selector.scss","webpack:///components/QuickCreate.scss","webpack:///components/Data.scss"],"names":[],"mappings":"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","file":"../styles/products.css","sourcesContent":[".productPlaceholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 10px;\n}\n\n.productPlaceholder-title {\n  margin: 10px 0;\n  font-weight: 400;\n  color: $wp-grey-dark-500;\n  font-size: 13px;\n}\n\n.productPlaceholder-text {\n  margin: 0 0 10px;\n  color: $wp-grey-dark-500;\n  font-weight: 300;\n  font-size: 11px;\n}\n","/* Grey */\n$wp-grey-dark-800: #181e22;\n$wp-grey-dark-600: #32373c;\n$wp-grey-dark-500: rgb(85, 93, 102);\n$wp-grey-dark-200: rgb(126, 137, 147);\n$wp-grey-dark-100: rgb(143, 152, 161);\n$wp-grey-light-800: #ddd;\n$wp-grey-light-200: rgb(243, 244, 245);\n$wp-grey-light-100: rgb(247, 247, 247);\n\n/* Blues */\n$wp-blue: #2a7da7;\n$wp-blue-medium: rgb(0, 160, 210);\n$wp-blue-tint-40: rgb(120, 198, 228);\n$wp-blue-tint-75: rgb(191, 231, 244);\n\n/* Greens */\n$wp-green-tint-60: rgb(181, 225, 185);\n$wp-green-tint-70: rgb(200, 233, 203);\n$wp-green-tint-90: rgb(237, 248, 238);\n\n/* Reds */\n$wp-red: #b52727;\n\n/* Yellows */\n$wp-yellow-tint-90: rgb(255, 248, 230);\n\n/* Fonts */\n$font-system-ui: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n",".productModal {\n  width: 100%;\n  height: 100%;\n}\n\n.productModal-overlay {\n  // To trump popover component.\n  z-index: 1000001;\n}\n\n.productModal .components-base-control .components-base-control__help {\n  margin-top: 0;\n}\n\n.productModal-layout {\n  display: flex;\n  align-items: flex-start;\n\n  @include mq($until: tablet) {\n    flex-wrap: wrap;\n  }\n}\n\n.productModal-main {\n  min-height: 200px;\n  height: 100%;\n  position: sticky;\n  top: 84px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n\n  @include mq($until: tablet) {\n    order: 2;\n    position: static;\n    width: 100%;\n  }\n}\n\n.productModal-sidebar {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  position: sticky;\n  height: 100%;\n  top: 84px;\n  width: 30%;\n  margin-left: 20px;\n\n  @include mq($until: tablet) {\n    order: 1;\n    position: static;\n    width: 100%;\n    margin-left: 0px;\n  }\n}\n\n.productModal-main .productPlaceholder {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.productModal-footer {\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  padding: 10px 0;\n  box-shadow: 0 -2.5px 2px -3px $wp-grey-light-800;\n  background: #fff;\n  margin: auto 0 0;\n}\n\n.productModal-footer--center {\n  justify-content: center;\n}\n\n.productModal-pagination > li {\n  border-radius: 2px;\n  margin-bottom: 0;\n}\n\n.productModal-pagination > li a {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  height: 36px;\n  font-weight: 400;\n  padding: 6px 12px;\n  color: $wp-grey-dark-500;\n  font-size: 13px;\n  font-family: $font-system-ui;\n}\n\n.productModal-pagination .disabled {\n  cursor: not-allowed;\n}\n\n.productModal-pagination .disabled a {\n  color: $wp-grey-light-800;\n}\n\n.productModal-pagination > .active {\n  background-color: $wp-blue;\n}\n\n.productModal-pagination > .active a {\n  color: #fff;\n}\n\n.productModal-pagination .next {\n  margin-left: 10px;\n}\n\n.productModal-pagination .previous {\n  margin-right: 10px;\n}\n.product-review-select-btn {\n  width: 75px;\n  justify-content: center;\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and â€¦`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, printâ€¦\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} â‰¥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",".productThumbnail-media {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  width: 100%;\n  border: 1px solid $wp-grey-light-800;\n  background-color: $wp-grey-light-100;\n  min-height: 150px;\n  margin-bottom: 10px;\n}\n\n.productThumbnail-media img {\n  object-fit: cover;\n  width: 100%;\n  height: 150px;\n}\n\n.productThumbnail .productThumbnail-title {\n  margin-bottom: 5px !important;\n  margin-top: 5px;\n}\n\n.productThumbnail-tags {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.productThumbnail-tag {\n  background-color: $wp-grey-light-200;\n  font-size: 11px;\n  font-weight: 400;\n  border-radius: 15px;\n  margin: 2.5px 5px 5px 0;\n  padding: 2.5px 10px;\n}\n\n.productThumbnail-actions {\n  margin-top: 10px;\n}\n\n.select-btn {\n  margin-bottom: 1em;\n}\n",".productTable {\n  border-collapse: collapse;\n  width: 100%;\n  border-radius: 3px;\n  overflow: hidden;\n}\n\n.productTable--isLoading {\n  pointer-events: none;\n  cursor: not-allowed;\n  opacity: .075;\n}\n\n.productTable-header {\n  text-align: left;\n}\n\n.productTable th,\n.productTable td {\n  padding: 10px;\n}\n\n.productTable th {\n  font-size: 14px;\n  font-weight: 400;\n  border-bottom: 1px solid $wp-grey-light-800;\n}\n\n.productTable-row {\n  position: relative;\n  cursor: pointer;\n  font-size: 13px;\n  font-weight: 300;\n  transition: all .2s ease-in-out;\n}\n\n.productTable-row:nth-child(odd) {\n  background-color: $wp-grey-light-100;\n}\n\n.productTable .productTable-row--selected,\n.productTable-row:hover {\n  transition: all .1s ease-in-out;\n  background-color: $wp-blue;\n  color: white;\n}\n\n@include mq($until: tablet) {\n  .productTable * {\n    display: block;\n  }\n\n  .productTable-header {\n    display: none;\n  }\n\n  .productTable-row {\n    padding: 10px;\n  }\n  .productTable-row td:first-child {\n    font-size: 16px;\n    font-weight: 400;\n  }\n\n  .productTable-row td {\n    padding: 0;\n    margin: 5px 0;\n  }\n\n  .productTable-row td:empty {\n    display: none;\n  }\n}\n",".productSelector .components-card {\n  border-left: none;\n  border-right: none;\n  border-bottom: none;\n  border-radius: 0;\n}\n\n.productSelector-title,\nh2.productSelector-title {\n  margin: 0;\n  font-size: 13px;\n}\n\n.productSelector-warning {\n  font-size: 11px;\n  background-color: $wp-yellow-tint-90;\n  padding: 10px;\n  border-radius: 3px;\n  margin-bottom: 10px;\n}\n\n.productSelector-text {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.productSelector-controls {\n  display: flex;\n}\n\n.productSelector-controls > * {\n  margin-right: 5px;\n}\n",".productQuickCreate-controls {\n  display: flex;\n  margin-top: 10px;\n}\n\n.productQuickCreate-controls > *:not(last-child) {\n  margin-right: 10px;\n}\n",".productData {\n  margin-bottom: 10px;\n  background-color: $wp-grey-light-100;\n  border-top: 1px solid $wp-grey-light-800;\n  padding: 10px;\n}\n\n.productData-list {\n  margin: 0;\n}\n\n.productData-title {\n  margin-bottom: 5px;\n  font-weight: 400;\n  font-size: 13px;\n  width: 100%;\n}\n\n.productData-key,\n.productData-item .productData-title {\n  padding-left: 0;\n}\n\n.productData-key::after {\n  content: \": \";\n}\n\nul.productData-list ul.productData-list {\n  list-style-type: circle;\n  padding-left: 1.5em;\n}\n\nul.productData-list ul.productData-list .productData-key,\nul.productData-list ul.productData-list .productData-title {\n  margin-left: -.25em;\n  font-weight: 300;\n}\n\nul.productData-list ul.productData-list .productData-item {\n  margin: 10px 0;\n}\n\n.productData-arrayItem {\n  list-style-type: decimal;\n  font-size: 13px;\n  border-radius: 3px;\n  margin-bottom: 10px;\n}\n\n.productData-content {\n  font-size: 13px;\n  font-weight: 300;\n  margin: 0;\n}\n\n.productData-tabs .components-tab-panel__tabs {\n  overflow: hidden;\n  overflow-x: scroll;\n  scrollbar-width: thin;\n}\n\n.productData-tabs .components-tab-panel__tabs-item {\n  height: 34px;\n  font-size: 12px;\n  color: $wp-grey-dark-500;\n}\n\n.productData-tabs .components-tab-panel__tabs-item.productData-activeTab {\n  color: $wp-grey-dark-800;\n  box-shadow: inset 0 1px $wp-blue;\n}\n"],"sourceRoot":""}